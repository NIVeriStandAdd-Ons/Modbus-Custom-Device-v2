<?xml version="1.0" encoding="Windows-1252"?><?xml-stylesheet type="text/xsl" href="parametersToHTML.xsl"?>
<parameters VIXMLVersion="2.1.0" xml:space="preserve" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="parameters.xsd"><parameter id="address_1098" name="address" img="datatype_images\cu16.gif" parentVI="Modbus Slave.lvclass:Write Single Coil.vi"><name>address</name><shortDescription><para> <thisParameter/> defines the address that the read or write operation should access.</para></shortDescription></parameter>
<parameter id="address_1190" name="address" img="datatype_images\cstr.gif" parentVI="API Main.lvlib:Create TCP Master.vi"><name>address</name><shortDescription><para> <thisParameter/> accepts the TCP/IP address of the desired slave.</para></shortDescription></parameter>
<parameter id="AND_Mask_28" name="AND Mask" img="datatype_images\cu16.gif" parentVI="Modbus API.lvclass:Mask Write Holding Register.vi"><name>AND Mask</name><shortDescription><para> <format type="bold">AND mask</format> is one of the masks used to set individual bits of a holding register. </para></shortDescription></parameter>
<parameter id="baud_rate_1136" name="baud rate" img="datatype_images\cu32.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>baud rate</name><shortDescription><para> <thisParameter/> is the rate of transmission. The default is 9600.</para></shortDescription></parameter>
<parameter id="baud_rate_(9600)_1172" name="baud rate (9600)" img="datatype_images\cu32.gif" parentVI="API Main.lvlib:Create Serial Slave.vi"><name>baud rate (9600)</name><shortDescription><para> <format type="bold">baud rate</format> is the rate of transmission. The default is 9600.</para></shortDescription></parameter>
<parameter id="code_1004" name="code" img="datatype_images\ii32.gif" parentVI="Modbus Slave.lvclass:Write Exception Status.vi"><name>code</name><shortDescription><para> The <thisParameter/> input identifies the error or warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="code_1012" name="code" img="datatype_images\ci32.gif" parentVI="Modbus Slave.lvclass:Write Multiple Coils.vi"><name>code</name><shortDescription><para> The <thisParameter/> input identifies the error or warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="code_1132" name="code" img="datatype_images\ci32.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>code</name><shortDescription><para> <thisParameter/> is the error or warning code.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="code_1150" name="code" img="datatype_images\ii32.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>code</name><shortDescription><para> <thisParameter/> is the error or warning code.

Right-click the <format type="bold">error out</format> indicator on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="code_1178" name="code" img="datatype_images\ii32.gif" parentVI="API Main.lvlib:Create Serial Slave.vi"><name>code</name><shortDescription><para> <thisParameter/> is the error or warning code.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="coils_373" name="coils" img="datatype_images\i1dbool.gif" parentVI="Modbus Master.lvclass:Read Coils.vi"><name>coils</name><shortDescription><para> <thisParameter/> provides the return coils read from the device.</para></shortDescription></parameter>
<parameter id="coils_to_write_1020" name="coils to write" img="datatype_images\c1dbool.gif" parentVI="Modbus Slave.lvclass:Write Multiple Coils.vi"><name>coils to write</name><shortDescription><para> <thisParameter/> defines the set of coils to be written to the device. These coils will be written to the device in a single atomic operation. A maximum of 1,968 coils can be written at once, due to size limitations of the Modbus protocol data unit.</para></shortDescription></parameter>
<parameter id="coil_to_write_1100" name="coil to write" img="datatype_images\cbool.gif" parentVI="Modbus Slave.lvclass:Write Single Coil.vi"><name>coil to write</name><shortDescription><para> <thisParameter/> defines the value of the coil to be written to the device. </para></shortDescription></parameter>
<parameter id="Connected?_719" name="Connected?" img="datatype_images\ibool.gif" parentVI="Modbus Slave.lvclass:Get Daemon Connections.vi"><name>Connected?</name><shortDescription><para> <thisParameter/></para></shortDescription></parameter>
<parameter id="connections_720" name="connections" img="datatype_images\i1dcclst.gif" parentVI="Modbus Slave.lvclass:Get Daemon Connections.vi"><name>connections</name><shortDescription><para> <thisParameter/> provides a list of all currently active connections to the Modbus slave provided as input</para></shortDescription><subParameters><refParameter id="Connected?_719"/><refParameter id="IP_address_718"/><refParameter id="connection_error_717"/></subParameters>
</parameter>
<parameter id="connection_count_694" name="connection count" img="datatype_images\iu32.gif" parentVI="Modbus Slave.lvclass:Get Daemon Connection Count.vi"><name>connection count</name><shortDescription><para> <thisParameter/> indicates the number of active connections to this Modbus slave instance</para></shortDescription></parameter>
<parameter id="connection_error_717" name="connection error" img="datatype_images\icclst.gif" parentVI="Modbus Slave.lvclass:Get Daemon Connections.vi"><name>connection error</name><shortDescription><para> <format type="bold">error in</format> can accept error information wired from VIs previously called. Use this information to decide if any functionality should be bypassed in the event of errors from other VIs.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error. </para></shortDescription><subParameters><refParameter id="status_1005"/><refParameter id="code_1004"/><refParameter id="source_100"/></subParameters>
</parameter>
<parameter id="daemon_error_742" name="daemon error" img="datatype_images\icclst.gif" parentVI="Modbus Slave.lvclass:Get Daemon Error.vi"><name>daemon error</name><shortDescription><para> <thisParameter/> indicates any cached errors which have occurred in the daemon associated with this Modbus slave instance.</para></shortDescription><subParameters><refParameter id="status_1005"/><refParameter id="code_1004"/><refParameter id="source_100"/></subParameters>
</parameter>
<parameter id="daemon_status_760" name="daemon status" img="datatype_images\ienum.gif" parentVI="Modbus Slave.lvclass:Get Daemon Status.vi"><name>daemon status</name><shortDescription><para> <thisParameter/> indicates the run state of the system.</para></shortDescription></parameter>
<parameter id="device_data_model_1162" name="device data model" img="datatype_images\crn.gif" parentVI="API Main.lvlib:Create Serial Slave.vi"><name>device data model</name><shortDescription><para> <thisParameter/> accepts an initialized data model, if extended functionality is desired. This model defines how the slave stores data and reacts to functions and data sent by a Modbus master.</para></shortDescription></parameter>
<parameter id="discrete_inputs_107" name="discrete inputs" img="datatype_images\i1dbool.gif" parentVI="Modbus API.lvclass:Read Discrete Inputs.vi"><name>discrete inputs</name><shortDescription><para> <thisParameter/> provides the return inputs read from the device.</para></shortDescription></parameter>
<parameter id="discrete_inputs_to_write_1040" name="discrete inputs to write" img="datatype_images\c1dbool.gif" parentVI="Modbus Slave.lvclass:Write Multiple Discrete Inputs.vi"><name>discrete inputs to write</name><shortDescription><para> <thisParameter/> defines the set of discrete inputs to be written to the device. These inputs will be written to the device in a single atomic operation.</para></shortDescription></parameter>
<parameter id="error_in_1014" name="error in" img="datatype_images\ccclst.gif" parentVI="Modbus Slave.lvclass:Write Multiple Coils.vi"><name>error in</name><shortDescription><para> <thisParameter/> describes error conditions that occur before this node runs. This input provides standard error in functionality.</para></shortDescription><subParameters><refParameter id="status_1013"/><refParameter id="code_1012"/><refParameter id="source_1011"/></subParameters>
</parameter>
<parameter id="error_in_1134" name="error in" img="datatype_images\ccclst.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>error in</name><shortDescription><para> <thisParameter/> describes error conditions that occur before this node runs. This input provides standard error in functionality.</para></shortDescription><subParameters><refParameter id="status_1133"/><refParameter id="code_1132"/><refParameter id="source_1131"/></subParameters>
</parameter>
<parameter id="error_in_(no_error)_682" name="error in (no error)" img="datatype_images\ccclst.gif" parentVI="Modbus Slave.lvclass:Get Daemon Connection Count.vi"><name>error in (no error)</name><shortDescription><para> <format type="bold">error in</format> describes error conditions that occur before this node runs. This input provides standard error in functionality.</para></shortDescription><subParameters><refParameter id="status_1013"/><refParameter id="code_1012"/><refParameter id="source_1011"/></subParameters>
</parameter>
<parameter id="error_out_1006" name="error out" img="datatype_images\icclst.gif" parentVI="Modbus Slave.lvclass:Write Exception Status.vi"><name>error out</name><shortDescription><para> <thisParameter/> contains error information. This output provides standard error out functionality.</para></shortDescription><subParameters><refParameter id="status_1005"/><refParameter id="code_1004"/><refParameter id="source_100"/></subParameters>
</parameter>
<parameter id="error_out_1152" name="error out" img="datatype_images\icclst.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>error out</name><shortDescription><para> <thisParameter/> contains error information. This output provides standard error out functionality.</para></shortDescription><subParameters><refParameter id="status_1151"/><refParameter id="code_1150"/><refParameter id="source_1149"/></subParameters>
</parameter>
<parameter id="error_out_1180" name="error out" img="datatype_images\icclst.gif" parentVI="API Main.lvlib:Create Serial Slave.vi"><name>error out</name><shortDescription><para> <thisParameter/> contains error information. This output provides standard error out functionality.</para></shortDescription><subParameters><refParameter id="status_1179"/><refParameter id="code_1178"/><refParameter id="source_1177"/></subParameters>
</parameter>
<parameter id="exception_status_125" name="exception status" img="datatype_images\iu8.gif" parentVI="Modbus API.lvclass:Read Exception Status.vi"><name>exception status</name><shortDescription><para> <thisParameter/> contains device exception information.</para></shortDescription></parameter>
<parameter id="exception_status_1000" name="exception status" img="datatype_images\cu8.gif" parentVI="Modbus Slave.lvclass:Write Exception Status.vi"><name>exception status</name><shortDescription><para> <thisParameter/> contains device exception information.</para></shortDescription></parameter>
<parameter id="flow_control_1170" name="flow control" img="datatype_images\cu16.gif" parentVI="API Main.lvlib:Create Serial Slave.vi"><name>flow control</name><shortDescription><para> <thisParameter/> sets the type of control used by the transfer mechanism. </para></shortDescription></parameter>
<parameter id="flow_control_(none)_1144" name="flow control (none)" img="datatype_images\cu16.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>flow control (none)</name><shortDescription><para> <format type="bold">flow control</format> sets the type of control used by the transfer mechanism. </para></shortDescription></parameter>
<parameter id="input_registers_to_write_1060" name="input registers to write" img="datatype_images\c1du16.gif" parentVI="Modbus Slave.lvclass:Write Multiple Input Registers.vi"><name>input registers to write</name><shortDescription><para> <format type="bold">registers to write</format> defines the set of input registers to be written to the device. These registers will be written to the device in a single atomic operation.</para></shortDescription></parameter>
<parameter id="IP_address_718" name="IP address" img="datatype_images\istr.gif" parentVI="Modbus Slave.lvclass:Get Daemon Connections.vi"><name>IP address</name><shortDescription><para> <thisParameter/></para></shortDescription></parameter>
<parameter id="Modbus_data_unit_in_333" name="Modbus data unit in" img="datatype_images\crn.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>Modbus data unit in</name><shortDescription><para> &lt;Modbus data unit in&gt; accepts an object which defines the protocol data unit (PDU) used by Modbus. This includes a function code and data.</para></shortDescription></parameter>
<parameter id="Modbus_data_unit_out_349" name="Modbus data unit out" img="datatype_images\irn.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>Modbus data unit out</name><shortDescription><para> &lt;Modbus data unit in&gt; returns the object provided as input which defines the protocol data unit (PDU) used by Modbus.</para></shortDescription></parameter>
<parameter id="Modbus_instance_in_115" name="Modbus instance in" img="datatype_images\crn.gif" parentVI="Modbus API.lvclass:Read Exception Status.vi"><name>Modbus instance in</name><shortDescription><para> <format type="bold">Modbus instance</format> can accept any Modbus instance, master or slave.</para></shortDescription></parameter>
<parameter id="Modbus_instance_out_105" name="Modbus instance out" img="datatype_images\irn.gif" parentVI="Modbus API.lvclass:Read Discrete Inputs.vi"><name>Modbus instance out</name><shortDescription><para> <format type="bold">Modbus instance</format> returns the Modbus instance provided as input.</para></shortDescription></parameter>
<parameter id="Modbus_master_in_297" name="Modbus master in" img="datatype_images\crn.gif" parentVI="Modbus Master.lvclass:Initialize.vi"><name>Modbus master in</name><shortDescription><para> <thisParameter/> can accept any Modbus master instance.</para></shortDescription></parameter>
<parameter id="Modbus_master_out_305" name="Modbus master out" img="datatype_images\irn.gif" parentVI="Modbus Master.lvclass:Initialize.vi"><name>Modbus master out</name><shortDescription><para> <thisParameter/> returns the Modbus master instance provided as input.</para></shortDescription></parameter>
<parameter id="Modbus_slave_in_1016" name="Modbus slave in" img="datatype_images\crn.gif" parentVI="Modbus Slave.lvclass:Write Multiple Coils.vi"><name>Modbus slave in</name><shortDescription><para> <thisParameter/> can accept any Modbus slave instance.</para></shortDescription></parameter>
<parameter id="Modbus_Slave_out_710" name="Modbus Slave out" img="datatype_images\irn.gif" parentVI="Modbus Slave.lvclass:Get Daemon Connections.vi"><name>Modbus Slave out</name><shortDescription><para> <format type="bold">Modbus slave out</format> returns the Modbus slave instance provided as input.</para></shortDescription></parameter>
<parameter id="Modbus_slave_out_1008" name="Modbus slave out" img="datatype_images\irn.gif" parentVI="Modbus Slave.lvclass:Write Exception Status.vi"><name>Modbus slave out</name><shortDescription><para> <thisParameter/> returns the Modbus slave instance provided as input.</para></shortDescription></parameter>
<parameter id="network_master_in_329" name="network master in" img="datatype_images\crn.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>network master in</name><shortDescription><para> <thisParameter/> accepts any network master object. This object will be used to provide access to the network.</para></shortDescription></parameter>
<parameter id="number_of_inputs_137" name="number of inputs" img="datatype_images\cu16.gif" parentVI="Modbus API.lvclass:Read Holding Registers.vi"><name>number of inputs</name><shortDescription><para> <thisParameter/> defines the number of inputs to read from the device, beginning at the <format type="bold">starting address</format></para></shortDescription></parameter>
<parameter id="objects_398" name="objects" img="datatype_images\i1dcclst.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>objects</name><shortDescription><para> <thisParameter/> returns all Modbus data objects requested.</para></shortDescription><subParameters><refParameter id="Object_ID_397"/><refParameter id="Value_396"/></subParameters>
</parameter>
<parameter id="objects_982" name="objects" img="datatype_images\c1dcclst.gif" parentVI="Modbus Slave.lvclass:Write Device Identification.vi"><name>objects</name><shortDescription><para> <thisParameter/> accepts Modbus objects. These objects consist of a numeric identifier and a string of data. VendorName (0x00), ProductCode (0x01), and MajorMinorRevision (0x02) are required to exist if a data model supports objects.</para></shortDescription><subParameters><refParameter id="Object_ID_981"/><refParameter id="Value_980"/></subParameters>
</parameter>
<parameter id="object_ID_383" name="object ID" img="datatype_images\cu8.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>object ID</name><shortDescription><para> <thisParameter/> defines the specific ID to read. This input is only used if <format type="bold">read device ID code</format> is set to Read Specific</para></shortDescription></parameter>
<parameter id="Object_ID_397" name="Object ID" img="datatype_images\iu8.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>Object ID</name><shortDescription><para> <thisParameter/></para></shortDescription></parameter>
<parameter id="Object_ID_981" name="Object ID" img="datatype_images\cu8.gif" parentVI="Modbus Slave.lvclass:Write Device Identification.vi"><name>Object ID</name><shortDescription><para> <thisParameter/></para></shortDescription></parameter>
<parameter id="OR_Mask_30" name="OR Mask" img="datatype_images\cu16.gif" parentVI="Modbus API.lvclass:Mask Write Holding Register.vi"><name>OR Mask</name><shortDescription><para> <format type="bold">OR mask</format> is one of the masks used to set individual bits of a holding register. </para></shortDescription></parameter>
<parameter id="parity_(even)_1142" name="parity (even)" img="datatype_images\cu16.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>parity (even)</name><shortDescription><para> <format type="bold">parity</format> specifies the parity used for every frame to be transmitted or received. The default is none.</para></shortDescription></parameter>
<parameter id="port_(502)_1192" name="port (502)" img="datatype_images\cu16.gif" parentVI="API Main.lvlib:Create TCP Master.vi"><name>port (502)</name><shortDescription><para> <format type="bold">port</format> accepts the TCP/IP port of the desired slave. The default for the Modbus standard is port 502.</para></shortDescription></parameter>
<parameter id="read_count_195" name="read count" img="datatype_images\cu16.gif" parentVI="Modbus API.lvclass:Write and Read Multiple Registers.vi"><name>read count</name><shortDescription><para> <thisParameter/> defines the number of holding registers to read</para></shortDescription></parameter>
<parameter id="read_device_ID_code_385" name="read device ID code" img="datatype_images\cenum.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>read device ID code</name><shortDescription><para> <thisParameter/> defines the type of read to be performed. If Read Basic is selected, this function will return the VendorName, ProductCode, and MajorMinorRevision. If Read Regular is selected, the previous objects will be returned along with, optionally, VendorUrl, ProductName, ModelName, or UserApplicationName. If Read Extended is selected, additional private objects may be returned, as defined by the manufaturer. Finally, Read Specific causes this function to only return the object defined by <format type="bold">object ID</format>. If a read type is selected which is higher than the capability of the device, it will return all objects possible. The only objects which are mandatory, if this function is supported by the device, are VendorName (0x00), ProductCode (0x01), and MajorMinorRevision (0x02). All other objects are optional.</para></shortDescription></parameter>
<parameter id="read_operation_timeout_492" name="read operation timeout" img="datatype_images\ci32.gif" parentVI="Modbus Master.lvclass:Set Read Timeout.vi"><name>read operation timeout</name><shortDescription><para> <thisParameter/> defines the timeout in ms of each read operation on the bus. A timeout of -1 will cause each operation to wait forever.</para></shortDescription></parameter>
<parameter id="read_starting_address_193" name="read starting address" img="datatype_images\cu16.gif" parentVI="Modbus API.lvclass:Write and Read Multiple Registers.vi"><name>read starting address</name><shortDescription><para> <thisParameter/> sets the starting address of the read action for this function</para></shortDescription></parameter>
<parameter id="read_values_209" name="read values" img="datatype_images\i1du16.gif" parentVI="Modbus API.lvclass:Write and Read Multiple Registers.vi"><name>read values</name><shortDescription><para> <thisParameter/> consists of <format type="bold">read count</format> holding registers from the device starting at <format type="bold">read starting address</format></para></shortDescription></parameter>
<parameter id="registers_to_write_1080" name="registers to write" img="datatype_images\c1du16.gif" parentVI="Modbus Slave.lvclass:Write Multiple Registers.vi"><name>registers to write</name><shortDescription><para> <thisParameter/> defines the set of holding registers to be written to the device. These registers will be written to the device in a single atomic operation. A maximum of 123 registers can be written at once, due to size limitations of the Modbus protocol data unit.</para></shortDescription></parameter>
<parameter id="register_to_write_1120" name="register to write" img="datatype_images\cu16.gif" parentVI="Modbus Slave.lvclass:Write Single Holding Register.vi"><name>register to write</name><shortDescription><para> <thisParameter/> defines the value of the holding register to be written to the device.</para></shortDescription></parameter>
<parameter id="register_values_147" name="register values" img="datatype_images\i1du16.gif" parentVI="Modbus API.lvclass:Read Holding Registers.vi"><name>register values</name><shortDescription><para> <thisParameter/> returns the registers requested from the device.</para></shortDescription></parameter>
<parameter id="serial_master_instance_1154" name="serial master instance" img="datatype_images\irn.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>serial master instance</name><shortDescription><para> <thisParameter/> returns a configured and initialized serial master.</para></shortDescription></parameter>
<parameter id="serial_slave_instance_1182" name="serial slave instance" img="datatype_images\irn.gif" parentVI="API Main.lvlib:Create Serial Slave.vi"><name>serial slave instance</name><shortDescription><para> <thisParameter/> returns a configured and initialized serial slave.</para></shortDescription></parameter>
<parameter id="serial_type_1146" name="serial type" img="datatype_images\cenum.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>serial type</name><shortDescription><para> <thisParameter/> defines the type of serial transmission data unit to be used. RTU is a binary, higher performance data unit. ASCII uses human-readable characters to send all data.</para></shortDescription></parameter>
<parameter id="source_100" name="source" img="datatype_images\istr.gif" parentVI="Modbus API.lvclass:Read Discrete Inputs.vi"><name>source</name><shortDescription><para> The <thisParameter/> string describes the origin of the error or warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="source_1011" name="source" img="datatype_images\cstr.gif" parentVI="Modbus Slave.lvclass:Write Multiple Coils.vi"><name>source</name><shortDescription><para> The <thisParameter/> string describes the origin of the error or warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="source_1131" name="source" img="datatype_images\cstr.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>source</name><shortDescription><para> <thisParameter/> describes the origin of the error or warning.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="source_1149" name="source" img="datatype_images\istr.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>source</name><shortDescription><para> <thisParameter/> string describes the origin of the error or warning.

Right-click the <format type="bold">error out</format> indicator on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="source_1177" name="source" img="datatype_images\istr.gif" parentVI="API Main.lvlib:Create Serial Slave.vi"><name>source</name><shortDescription><para> <thisParameter/> describes the origin of the error or warning.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="starting_address_1018" name="starting address" img="datatype_images\cu16.gif" parentVI="Modbus Slave.lvclass:Write Multiple Coils.vi"><name>starting address</name><shortDescription><para> <thisParameter/> defines the initial address used for the read or write operation. The Modbus specification defines this address as being 1-indexed. This library implementation uses 0-indexed addresses.</para></shortDescription></parameter>
<parameter id="status_1005" name="status" img="datatype_images\ibool.gif" parentVI="Modbus Slave.lvclass:Write Exception Status.vi"><name>status</name><shortDescription><para> The <thisParameter/> boolean is either TRUE (X) for an error, or FALSE (checkmark) for no error or a warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="status_1013" name="status" img="datatype_images\cbool.gif" parentVI="Modbus Slave.lvclass:Write Multiple Coils.vi"><name>status</name><shortDescription><para> The <thisParameter/> boolean is either TRUE (X) for an error, or FALSE (checkmark) for no error or a warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="status_1133" name="status" img="datatype_images\cbool.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>status</name><shortDescription><para> <thisParameter/> is TRUE (X) if an error occurred or FALSE (checkmark) to indicate a warning or that no error occurred.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="status_1151" name="status" img="datatype_images\ibool.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>status</name><shortDescription><para> <thisParameter/> is TRUE (X) if an error occurred or FALSE (checkmark) to indicate a warning or that no error occurred.

Right-click the <format type="bold">error out</format> indicator on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="status_1179" name="status" img="datatype_images\ibool.gif" parentVI="API Main.lvlib:Create Serial Slave.vi"><name>status</name><shortDescription><para> <thisParameter/> is TRUE (X) if an error occurred or FALSE (checkmark) to indicate a warning or that no error occurred.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="TCP_master_instance_1200" name="TCP master instance" img="datatype_images\irn.gif" parentVI="API Main.lvlib:Create TCP Master.vi"><name>TCP master instance</name><shortDescription><para> <thisParameter/> returns a configured and initialized TCP master.</para></shortDescription></parameter>
<parameter id="TCP_slave_instance_1218" name="TCP slave instance" img="datatype_images\irn.gif" parentVI="API Main.lvlib:Create TCP Slave.vi"><name>TCP slave instance</name><shortDescription><para> <thisParameter/> returns a configured and initialized TCP slave.</para></shortDescription></parameter>
<parameter id="transmission_data_unit_in_331" name="transmission data unit in" img="datatype_images\crn.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>transmission data unit in</name><shortDescription><para> <format type="bold">transmission data unit</format> accepts an object which defines the transmission ADU used by the device. In the standard protocol, this includes RTU serial, ASCII serial, and TCP/IP ADUs.</para></shortDescription></parameter>
<parameter id="unit_ID_530" name="unit ID" img="datatype_images\cu8.gif" parentVI="Modbus Master.lvclass:Set Unit ID.vi"><name>unit ID</name><shortDescription><para> <thisParameter/> defines the device targeted by all Modbus master read and write operations. This value is only used with a serial transmission data unit.</para></shortDescription></parameter>
<parameter id="unit_ID_1140" name="unit ID" img="datatype_images\cu8.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>unit ID</name><shortDescription><para> <thisParameter/> defines the device targeted by all Modbus master read and write operations.</para></shortDescription></parameter>
<parameter id="unit_ID_1166" name="unit ID" img="datatype_images\cu8.gif" parentVI="API Main.lvlib:Create Serial Slave.vi"><name>unit ID</name><shortDescription><para> <thisParameter/> defines the device ID. This is used by the device to determine which requests to respond to. A slave will only respond to requests which have an ID equal to their own.</para></shortDescription></parameter>
<parameter id="Value_396" name="Value" img="datatype_images\istr.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>Value</name><shortDescription><para> <thisParameter/></para></shortDescription></parameter>
<parameter id="Value_980" name="Value" img="datatype_images\cstr.gif" parentVI="Modbus Slave.lvclass:Write Device Identification.vi"><name>Value</name><shortDescription><para> <thisParameter/></para></shortDescription></parameter>
<parameter id="VISA_resource_name_1138" name="VISA resource name" img="datatype_images\cio.gif" parentVI="API Main.lvlib:Create Serial Master.vi"><name>VISA resource name</name><shortDescription><para> <thisParameter/> specifies the resource to be opened. The VISA resource name control also specifies the session and class. </para></shortDescription></parameter>
<parameter id="write_operation_timeout_512" name="write operation timeout" img="datatype_images\ci32.gif" parentVI="Modbus Master.lvclass:Set Timeouts.vi"><name>write operation timeout</name><shortDescription><para> <thisParameter/> defines the timeout in ms of each write operation on the bus. A timeout of -1 will cause each operation to wait forever.</para></shortDescription></parameter>
<parameter id="write_starting_address_197" name="write starting address" img="datatype_images\cu16.gif" parentVI="Modbus API.lvclass:Write and Read Multiple Registers.vi"><name>write starting address</name><shortDescription><para> <thisParameter/> defines the start address of the write command</para></shortDescription></parameter>
<parameter id="write_values_199" name="write values" img="datatype_images\c1du16.gif" parentVI="Modbus API.lvclass:Write and Read Multiple Registers.vi"><name>write values</name><shortDescription><para> <thisParameter/> defines the data to be written to the device, starting at <format type="bold">write starting address</format></para></shortDescription></parameter></parameters>
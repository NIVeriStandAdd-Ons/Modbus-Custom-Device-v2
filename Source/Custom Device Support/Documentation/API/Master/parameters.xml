<?xml version="1.0" encoding="Windows-1252"?><?xml-stylesheet type="text/xsl" href="parametersToHTML.xsl"?>
<parameters VIXMLVersion="2.1.0" xml:space="preserve" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="parameters.xsd"><parameter id="address_26" name="address" img="datatype_images\cu16.gif" parentVI="Modbus Master.lvclass:Mask Write Holding Register.vi"><name>address</name><shortDescription><para> <thisParameter/> defines the address that the read or write operation should access.</para></shortDescription></parameter>
<parameter id="AND_Mask_28" name="AND Mask" img="datatype_images\cu16.gif" parentVI="Modbus Master.lvclass:Mask Write Holding Register.vi"><name>AND Mask</name><shortDescription><para> <format type="bold">AND mask</format> is one of the masks used to set individual bits of a holding register. </para></shortDescription></parameter>
<parameter id="code_48" name="code" img="datatype_images\ci32.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>code</name><shortDescription><para> <thisParameter/> is the error or warning code.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="code_56" name="code" img="datatype_images\ii32.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>code</name><shortDescription><para> <thisParameter/> is the error or warning code.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="code_100" name="code" img="datatype_images\ii32.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>code</name><shortDescription><para> The <thisParameter/> input identifies the error or warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="code_113" name="code" img="datatype_images\ci32.gif" parentVI="Modbus Master.lvclass:Read Discrete Inputs.vi"><name>code</name><shortDescription><para> The <thisParameter/> input identifies the error or warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="coils_84" name="coils" img="datatype_images\i1dbool.gif" parentVI="Modbus Master.lvclass:Read Coils.vi"><name>coils</name><shortDescription><para> <thisParameter/> provides the return coils read from the device.</para></shortDescription></parameter>
<parameter id="coils_to_write_319" name="coils to write" img="datatype_images\c1dbool.gif" parentVI="Modbus Master.lvclass:Write Multiple Coils.vi"><name>coils to write</name><shortDescription><para> <thisParameter/> defines the set of coils to be written to the device. These coils will be written to the device in a single atomic operation. A maximum of 1,968 coils can be written at once, due to size limitations of the Modbus protocol data unit.</para></shortDescription></parameter>
<parameter id="coil_to_write_359" name="coil to write" img="datatype_images\cbool.gif" parentVI="Modbus Master.lvclass:Write Single Coil.vi"><name>coil to write</name><shortDescription><para> <thisParameter/> defines the value of the coil to be written to the device. </para></shortDescription></parameter>
<parameter id="discrete_inputs_131" name="discrete inputs" img="datatype_images\i1dbool.gif" parentVI="Modbus Master.lvclass:Read Discrete Inputs.vi"><name>discrete inputs</name><shortDescription><para> <thisParameter/> provides the return inputs read from the device.</para></shortDescription></parameter>
<parameter id="error_in_50" name="error in" img="datatype_images\ccclst.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>error in</name><shortDescription><para> <thisParameter/> describes error conditions that occur before this node runs. This input provides standard error in functionality.</para></shortDescription><subParameters><refParameter id="status_49"/><refParameter id="code_48"/><refParameter id="source_47"/></subParameters>
</parameter>
<parameter id="error_in_115" name="error in" img="datatype_images\ccclst.gif" parentVI="Modbus Master.lvclass:Read Discrete Inputs.vi"><name>error in</name><shortDescription><para> <thisParameter/> describes error conditions that occur before this node runs. This input provides standard error in functionality.</para></shortDescription><subParameters><refParameter id="status_114"/><refParameter id="code_113"/><refParameter id="source_112"/></subParameters>
</parameter>
<parameter id="error_out_58" name="error out" img="datatype_images\icclst.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>error out</name><shortDescription><para> <thisParameter/> contains error information. This output provides standard error out functionality.</para></shortDescription><subParameters><refParameter id="status_57"/><refParameter id="code_56"/><refParameter id="source_55"/></subParameters>
</parameter>
<parameter id="error_out_102" name="error out" img="datatype_images\icclst.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>error out</name><shortDescription><para> <thisParameter/> contains error information. This output provides standard error out functionality.</para></shortDescription><subParameters><refParameter id="status_101"/><refParameter id="code_100"/><refParameter id="source_11"/></subParameters>
</parameter>
<parameter id="exception_status_149" name="exception status" img="datatype_images\iu8.gif" parentVI="Modbus Master.lvclass:Read Exception Status.vi"><name>exception status</name><shortDescription><para> <thisParameter/> contains device exception information.</para></shortDescription></parameter>
<parameter id="Modbus_data_unit_in_44" name="Modbus data unit in" img="datatype_images\crn.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>Modbus data unit in</name><shortDescription><para> &lt;Modbus data unit in&gt; accepts an object which defines the protocol data unit (PDU) used by Modbus. This includes a function code and data.</para></shortDescription></parameter>
<parameter id="Modbus_data_unit_out_60" name="Modbus data unit out" img="datatype_images\irn.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>Modbus data unit out</name><shortDescription><para> &lt;Modbus data unit in&gt; returns the object provided as input which defines the protocol data unit (PDU) used by Modbus.</para></shortDescription></parameter>
<parameter id="Modbus_instance_in_24" name="Modbus instance in" img="datatype_images\crn.gif" parentVI="Modbus Master.lvclass:Mask Write Holding Register.vi"><name>Modbus instance in</name><shortDescription><para> <format type="bold">Modbus instance</format> can accept any Modbus instance, master or slave.</para></shortDescription></parameter>
<parameter id="Modbus_instance_out_305" name="Modbus instance out" img="datatype_images\irn.gif" parentVI="Modbus Master.lvclass:Write and Read Multiple Registers.vi"><name>Modbus instance out</name><shortDescription><para> <format type="bold">Modbus instance</format> returns the Modbus instance provided as input.</para></shortDescription></parameter>
<parameter id="Modbus_master_in_117" name="Modbus master in" img="datatype_images\crn.gif" parentVI="Modbus Master.lvclass:Read Discrete Inputs.vi"><name>Modbus master in</name><shortDescription><para> <thisParameter/> can accept any Modbus master instance.</para></shortDescription></parameter>
<parameter id="Modbus_master_out_104" name="Modbus master out" img="datatype_images\irn.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>Modbus master out</name><shortDescription><para> <thisParameter/> returns the Modbus master instance provided as input.</para></shortDescription></parameter>
<parameter id="network_master_in_40" name="network master in" img="datatype_images\crn.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>network master in</name><shortDescription><para> <thisParameter/> accepts any network master object. This object will be used to provide access to the network.</para></shortDescription></parameter>
<parameter id="number_of_inputs_121" name="number of inputs" img="datatype_images\cu16.gif" parentVI="Modbus Master.lvclass:Read Discrete Inputs.vi"><name>number of inputs</name><shortDescription><para> <thisParameter/> defines the number of inputs to read from the device, beginning at the <format type="bold">starting address</format></para></shortDescription></parameter>
<parameter id="objects_109" name="objects" img="datatype_images\i1dcclst.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>objects</name><shortDescription><para> <thisParameter/> returns all Modbus data objects requested.</para></shortDescription><subParameters><refParameter id="Object_ID_108"/><refParameter id="Value_107"/></subParameters>
</parameter>
<parameter id="object_ID_94" name="object ID" img="datatype_images\cu8.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>object ID</name><shortDescription><para> <thisParameter/> defines the specific ID to read. This input is only used if <format type="bold">read device ID code</format> is set to Read Specific</para></shortDescription></parameter>
<parameter id="Object_ID_108" name="Object ID" img="datatype_images\iu8.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>Object ID</name><shortDescription><para> <thisParameter/></para></shortDescription></parameter>
<parameter id="OR_Mask_30" name="OR Mask" img="datatype_images\cu16.gif" parentVI="Modbus Master.lvclass:Mask Write Holding Register.vi"><name>OR Mask</name><shortDescription><para> <format type="bold">OR mask</format> is one of the masks used to set individual bits of a holding register. </para></shortDescription></parameter>
<parameter id="read_count_293" name="read count" img="datatype_images\cu16.gif" parentVI="Modbus Master.lvclass:Write and Read Multiple Registers.vi"><name>read count</name><shortDescription><para> <thisParameter/> defines the number of holding registers to read</para></shortDescription></parameter>
<parameter id="read_device_ID_code_96" name="read device ID code" img="datatype_images\cenum.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>read device ID code</name><shortDescription><para> <thisParameter/> defines the type of read to be performed. If Read Basic is selected, this function will return the VendorName, ProductCode, and MajorMinorRevision. If Read Regular is selected, the previous objects will be returned along with, optionally, VendorUrl, ProductName, ModelName, or UserApplicationName. If Read Extended is selected, additional private objects may be returned, as defined by the manufaturer. Finally, Read Specific causes this function to only return the object defined by <format type="bold">object ID</format>. If a read type is selected which is higher than the capability of the device, it will return all objects possible. The only objects which are mandatory, if this function is supported by the device, are VendorName (0x00), ProductCode (0x01), and MajorMinorRevision (0x02). All other objects are optional.</para></shortDescription></parameter>
<parameter id="read_operation_timeout_203" name="read operation timeout" img="datatype_images\ci32.gif" parentVI="Modbus Master.lvclass:Set Read Timeout.vi"><name>read operation timeout</name><shortDescription><para> <thisParameter/> defines the timeout in ms of each read operation on the bus. A timeout of -1 will cause each operation to wait forever.</para></shortDescription></parameter>
<parameter id="read_starting_address_291" name="read starting address" img="datatype_images\cu16.gif" parentVI="Modbus Master.lvclass:Write and Read Multiple Registers.vi"><name>read starting address</name><shortDescription><para> <thisParameter/> sets the starting address of the read action for this function</para></shortDescription></parameter>
<parameter id="read_values_307" name="read values" img="datatype_images\i1du16.gif" parentVI="Modbus Master.lvclass:Write and Read Multiple Registers.vi"><name>read values</name><shortDescription><para> <thisParameter/> consists of <format type="bold">read count</format> holding registers from the device starting at <format type="bold">read starting address</format></para></shortDescription></parameter>
<parameter id="registers_to_write_339" name="registers to write" img="datatype_images\c1du16.gif" parentVI="Modbus Master.lvclass:Write Multiple Registers.vi"><name>registers to write</name><shortDescription><para> <thisParameter/> defines the set of holding registers to be written to the device. These registers will be written to the device in a single atomic operation. A maximum of 123 registers can be written at once, due to size limitations of the Modbus protocol data unit.</para></shortDescription></parameter>
<parameter id="register_to_write_379" name="register to write" img="datatype_images\cu16.gif" parentVI="Modbus Master.lvclass:Write Single Holding Register.vi"><name>register to write</name><shortDescription><para> <thisParameter/> defines the value of the holding register to be written to the device.</para></shortDescription></parameter>
<parameter id="register_values_171" name="register values" img="datatype_images\i1du16.gif" parentVI="Modbus Master.lvclass:Read Holding Registers.vi"><name>register values</name><shortDescription><para> <thisParameter/> returns the registers requested from the device.</para></shortDescription></parameter>
<parameter id="source_11" name="source" img="datatype_images\istr.gif" parentVI="Modbus Master.lvclass:Initialize.vi"><name>source</name><shortDescription><para> The <thisParameter/> string describes the origin of the error or warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="source_47" name="source" img="datatype_images\cstr.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>source</name><shortDescription><para> <thisParameter/> describes the origin of the error or warning.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="source_55" name="source" img="datatype_images\istr.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>source</name><shortDescription><para> <thisParameter/> describes the origin of the error or warning.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="source_112" name="source" img="datatype_images\cstr.gif" parentVI="Modbus Master.lvclass:Read Discrete Inputs.vi"><name>source</name><shortDescription><para> The <thisParameter/> string describes the origin of the error or warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="starting_address_119" name="starting address" img="datatype_images\cu16.gif" parentVI="Modbus Master.lvclass:Read Discrete Inputs.vi"><name>starting address</name><shortDescription><para> <thisParameter/> defines the initial address used for the read or write operation. The Modbus specification defines this address as being 1-indexed. This library implementation uses 0-indexed addresses.</para></shortDescription></parameter>
<parameter id="status_49" name="status" img="datatype_images\cbool.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>status</name><shortDescription><para> <thisParameter/> is TRUE (X) if an error occurred or FALSE (checkmark) to indicate a warning or that no error occurred.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="status_57" name="status" img="datatype_images\ibool.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>status</name><shortDescription><para> <thisParameter/> is TRUE (X) if an error occurred or FALSE (checkmark) to indicate a warning or that no error occurred.

Right-click the <format type="bold">error in</format> control on the front panel and select <format type="bold">Explain Error</format> or <format type="bold">Explain Warning</format> from the shortcut menu for more information about the error.</para></shortDescription></parameter>
<parameter id="status_101" name="status" img="datatype_images\ibool.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>status</name><shortDescription><para> The <thisParameter/> boolean is either TRUE (X) for an error, or FALSE (checkmark) for no error or a warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="status_114" name="status" img="datatype_images\cbool.gif" parentVI="Modbus Master.lvclass:Read Discrete Inputs.vi"><name>status</name><shortDescription><para> The <thisParameter/> boolean is either TRUE (X) for an error, or FALSE (checkmark) for no error or a warning.

The pop-up option <format type="bold">Explain Error</format> (or Explain Warning) gives more information about the error displayed.</para></shortDescription></parameter>
<parameter id="transmission_data_unit_in_42" name="transmission data unit in" img="datatype_images\crn.gif" parentVI="Modbus Master.lvclass:Master network read write.vi"><name>transmission data unit in</name><shortDescription><para> <format type="bold">transmission data unit</format> accepts an object which defines the transmission ADU used by the device. In the standard protocol, this includes RTU serial, ASCII serial, and TCP/IP ADUs.</para></shortDescription></parameter>
<parameter id="unit_ID_241" name="unit ID" img="datatype_images\cu8.gif" parentVI="Modbus Master.lvclass:Set Unit ID.vi"><name>unit ID</name><shortDescription><para> <thisParameter/> defines the device targeted by all Modbus master read and write operations. This value is only used with a serial transmission data unit.</para></shortDescription></parameter>
<parameter id="Value_107" name="Value" img="datatype_images\istr.gif" parentVI="Modbus Master.lvclass:Read Device Identification.vi"><name>Value</name><shortDescription><para> <thisParameter/></para></shortDescription></parameter>
<parameter id="write_operation_timeout_223" name="write operation timeout" img="datatype_images\ci32.gif" parentVI="Modbus Master.lvclass:Set Timeouts.vi"><name>write operation timeout</name><shortDescription><para> <thisParameter/> defines the timeout in ms of each write operation on the bus. A timeout of -1 will cause each operation to wait forever.</para></shortDescription></parameter>
<parameter id="write_starting_address_295" name="write starting address" img="datatype_images\cu16.gif" parentVI="Modbus Master.lvclass:Write and Read Multiple Registers.vi"><name>write starting address</name><shortDescription><para> <thisParameter/> defines the start address of the write command</para></shortDescription></parameter>
<parameter id="write_values_297" name="write values" img="datatype_images\c1du16.gif" parentVI="Modbus Master.lvclass:Write and Read Multiple Registers.vi"><name>write values</name><shortDescription><para> <thisParameter/> defines the data to be written to the device, starting at <format type="bold">write starting address</format></para></shortDescription></parameter></parameters>